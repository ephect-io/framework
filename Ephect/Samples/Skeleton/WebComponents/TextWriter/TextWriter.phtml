<template id="TextWriter">
    <div class="text-snippet">
        <div class="to-be-written">
            <div id="to-write"></div>
        </div>
    </div>
</template>
<script>
    import TextWriter from "./TextWriter.class.mjs"


    /**
     * Rename the component
     */
    class TextWriterComponent extends HTMLElement {

        constructor() {
            super();

            this.text
            this.attachShadow({mode: 'open'})
            this.shadowRoot.innerHTML = document.getElementById('TextWriter').innerHTML

            const slots = this.shadowRoot.querySelectorAll('slot')
            if (slots.length) {
                slots[0].addEventListener('slotchange', event => {
                    console.dir(slots[0].assignedNodes())
                })
            }

        }

        static get observeAttributes() {
            /**
            * Attributes passed inline to the component
            */
            return ['text']
        }
        get text() {
            return this.getAttribute('text') ?? null
        }
        

        async connectedCallback() {
            /**
             * The magic starts here
             */
            const base = new TextWriter(this)
            base.writeLikeAHuman('to-write')
        }
    }

    customElements.define('text-writer', TextWriterComponent);
</script>

<template id="HelloWorld">
    <h1>
        <slot/>
        {{ foo }}
    </h1>
</template>
<script>
    import HelloWorld from "./HelloWorld.class.mjs"


    /**
     * Rename the component
     */
    class HelloWorldComponent extends HTMLElement {

        constructor() {
            super();

            <Properties/>
            this.attachShadow({mode: 'open'});
            this.shadowRoot.innerHTML = document.getElementById('HelloWorld').innerHTML

            const slots = this.shadowRoot.querySelectorAll('slot')
            if (slots.length) {
                slots[0].addEventListener('slotchange', event => {
                    console.dir(slots[0].assignedNodes())
                })
            }

        }

    static get observeAttributes() {
            /**
            * Attributes passed inline to the component
            */
            return ['word']
        }
    get word() {
            return this.getAttribute('word') ?? null
        }
        

        async connectedCallback() {
            /**
             * The magic starts here
             */
            const base = new HelloWorld()
            base.
            <Entrypoint/>()
        }
    }

    customElements.define('hello-world', HelloWorldComponent);
</script>

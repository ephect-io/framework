<?php

namespace Ephect\Plugins\Webcomponent;

function Webcomponent($children)
{

    return (<<< HTML
    <template id="Base">
        {{ children }}
    </template>
    <script>
    import Base from "./Base.class.mjs"

    /**
     * Rename the component
     */
    class BaseComponent extends HTMLElement {

        constructor() {
            super();

            this.attachShadow({ mode: 'open' });
            this.shadowRoot.innerHTML = document.getElementById('Base').innerHTML

            const slots = this.shadowRoot.querySelectorAll('slot')
            if(slots.length) {
                slots[0].addEventListener('slotchange', event => {
                    console.dir(slots[0].assignedNodes())
                })
            }

        }

        static get observeAttributes() {
            /**
             * Attributes passed inline to the component
             */
            return ['foo']
        }

        get foo() {
            return this.getAttribute('foo') ?? null
        }

        async connectedCallback() {
        /**
            * The magic starts here
            */
        const base = new Base()
        base.doSomething(this.foo)
        }
    }

    customElements.define('<tag />', <class />);
    </script>
    HTML);
}
